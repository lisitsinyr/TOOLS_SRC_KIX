;=======================================================================================
; CountStrWord
;=======================================================================================
   BREAK ON

;=======================================================================================
; Uses
;=======================================================================================
   if not $KxlDir Call "\\S73FS01\APPInfo\Tools\KxlDir.kxl" endif
   Call $KxlDir+"\UDF\LUFile.kxl"
   Call $KxlDir+"\UDF\LUSupport.kxl"
   Call $KxlDir+"\UDF\LUStrings.kxl"

   $SourcePath = ""
   $DestPath   = ""

;-------------------------------------------------------------------------------
; CScanFile ($ASourcePath, $AMask)
;-------------------------------------------------------------------------------
function NULLFile ($AFileName)
;begin
   $LPath = GetFilePath ($AFileName)
   if not Exist ($LPath) 
      MD $LPath
   endif
   if Exist ($AFileName) 
      Del $AFileName
   endif
   $LLFile = FreeFileHandle
   $Res = open ($LLFile, $AFileName, 1+4)
   $Res = writeline ($LLFile,"")
   $Res = close ($LLFile)
EndFunction

;-------------------------------------------------------------------------------
; CScanFile ($ASourcePath, $AMask)
;-------------------------------------------------------------------------------
function CScanFile ($ASourcePath, $AMask)
   Dim $LResult
;begin
   $LFile = Dir ($ASourcePath+"\"+$AMask)
   WHILE @ERROR = 0 AND $LFile
      IF $LFile <> "." AND $LFile <> ".."
         IF (GetFileAttr ($ASourcePath + "\" + $LFile) & 16)=0
            $LFileNameSource = $ASourcePath + "\" + $LFile
            $FileExt = GetFileExt($LFileNameSource)
            ;$LFileSizeSource = GetFileSize ($LFileNameSource)
            ;$LFileTimeSource = GetFileTime ($LFileNameSource)

            ;$LFileNameDest = $LFileNameSource
            ;$LFileNameDest = Replace ($LFileNameDest, $SourcePath, $DestPath, 1, )

            $LFileNameDest = Replace ($LFileNameSource, $SourcePath, $DestPath, 1, )

            LogAdd ($Log, $LogFile, "P", "  "+$LFileNameSource+" => "+$LFileNameDest)
            NULLFile ($LFileNameDest)

         endif
      endif
      if @ERROR = 0
         $LFile = Dir("")
      endif
   loop
EndFunction

;-------------------------------------------------------------------------------
; ScanDir ($ASourcePath, $AMask)
;-------------------------------------------------------------------------------
function CScanDir ($ASourcePath, $AMask)
;begin
   $LFile = Dir ($ASourcePath+"\*.*")
   ;LogAdd ($Log, $LogFile, "P", $ASourcePath)
   WHILE @ERROR = 0 AND $LFile
      IF $LFile <> "." AND $LFile <> ".."
         IF GetFileAttr ($ASourcePath + "\" + $LFile) & 16    ; is it a directory ?
            $LSourcePath = $ASourcePath + "\" + $LFile
            LogAdd ($Log, $LogFile, "P", $LSourcePath)
            CScanFile ($LSourcePath, $AMask)
            CScanDir ($LSourcePath, $AMask)
         endif
      endif
      if @ERROR = 0
         $LFile = Dir("")
      endif
   loop
EndFunction

;-------------------------------------------------------------------------------
;  Scan ($ASourcePath, $AMask)
;-------------------------------------------------------------------------------
function Scan ($ASourcePath, $ADestPath)
;begin
   if $ASourcePath
      $LSourcePath = $ASourcePath
   else
      $LSourcePath = @CurDir
   endif
   $LMask = "*.*"

   LogAdd ($Log, $LogFile, "P", $LSourcePath)

   CScanFile ($LSourcePath, $LMask)
   CScanDir  ($LSourcePath, $LMask)
EndFunction

;main
   ;=======================================================================================
   if $S
      $SourcePath = $S
   else
      $SourcePath = @Curdir
   endif
   if $D
      $DestPath = $D
   else
      $DestPath = @Curdir
   endif
   if $SourcePath <> $DestPath
      $Log = 30 
      $LogDir = %TEMP%
      $LogDir = $DestPath
      $LogFile = "NULLFiles.log"
      $LogFile = LogFileName($Log,$LogDir,$LogFile)
      LogAdd ($Log, $LogFile, "P", $LogFile)
      LogAdd ($Log, $LogFile, "P", $SourcePath+" => "+$DestPath)
      Scan ($SourcePath, $DestPath)
   endif

;end
